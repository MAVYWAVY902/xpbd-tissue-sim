## made on 090/05/25 - things may have changed since then
## NOTE: not all parameters below are required - the Simulation class and all Object classes have many default parameters

name: "Palpation"  # name of the simulation
description: "Sensing stiffness by touching tissue." # description of the simulation

visualization: "VTK" # what graphics to use ('Easy3D' for Easy3D graphics or 'None' for no graphics)

g-accel: 0 # downward acceleration due to gravity (in the z-direction) [m/s2]

input-device: "Haptic" # the input device for interactivity - "Mouse" or "Haptic" (Phantom Omni)
# fixed-faces-filename: "../resource/demos/trachea_virtuoso/cao_04_29_25_model1_decimated3_r_fixed_faces.txt"
# tumor-faces-filename: "../resource/demos/trachea_virtuoso/cao_04_29_25_model1_decimated3_r_tumor_faces.txt"
show-tip-cursor: false
enable-mouse-interaction: true
haptic-force-scaling: 5.0


## different simulation "modes"
# sim-mode: "Frame-by-frame"  # "Frame-by-frame" lets you advance the simulation one frame at a time by pressing any key
sim-mode: "AFAP"     # "Visualization" runs the simulation at 'real-time' such that sim time = wall clock time
# sim-mode: "AFAP"            # "AFAP" runs the simulation As Fast As Possible, without caring if sim time is going faster than wall clock time

time-step: 1e-2   # simulation time step [s]
collision-rate: 100 # rate at which to run collision detection [Hz] 
fps: 30 # frames per second of the visualization (i.e. how often to redraw graphics)
end-time: 1000000 # end time of the simulation [s]

## rendering settings
exposure: 0.2
hdr-image-filename: "../resource/rendering/hdr/surgery_1k.hdr"
create-skybox: true
window-width: 1000
window-height: 1000

## define elastic materials
materials:
  -
    name: "Soft Tissue"
    density: 1000   # density [kg/m^3]
    E: 6e4    # Young's modulus [Pa]
    nu: 0.45  # Poisson's ratio [-]
    mu-s: 0.0 # coefficient of static friction [-]
    mu-k: 0.0 # coefficient of kinetic friction [-]
  -
    name: "Stiffer Tissue"
    density: 1030
    E: 3e5
    # E: 0.5e6
    nu: 0.49
  -
    name: "Raw Chicken Breast"
    density: 1060
    E: 0.07e6
    # E: 0.35e6
    nu: 0.49

## objects in the simulation
objects:

  ## example deformable object
  -
    name: "Cube1"

    ## type of object
    type: "FirstOrderXPBDMeshObject"  # use the 1st-order XPBD method
    # type: "XPBDMeshObject"          # use the standard, 2nd-order XPBD method

    ## filename to load from (.msh is GMSH's volumetric mesh format, but if .obj or .stl is provided, will automatically turn surface mesh to volume mesh)
    filename: "../resource/demos/palpation/2x1x1_block16.msh"
    # filename: "../resource/cube/cube8.msh"
    element-classes-filename: "../resource/demos/palpation/2x1x1_block16_element_classes.txt"

    materials: ["Soft Tissue", "Stiffer Tissue"] # the elastic material(s) (must match with the name of a material defined above)

    ## initial configuration
    max-size: 0.025   # size of largest model dimension (preserves aspect ratio)
    # size: [1, 1, 1]   # specify size of each dimension
    position: [0, 0, 0]   # initial position of mesh center of mass [m]
    velocity: [0, 0, 0.0]   # initial velocity [m/s] (applied to all vertices in the deformable mesh)
    rotation: [0, 0, 0]     # initial rotation [deg] (specified as XYZ Euler angles)

    ## collisions
    collisions: true

    ## XPBD-specific options
    num-solver-iters: 1   # number of solver loop iterations per time step
    num-local-collision-iters: 5 
    
    solver-type: "Gauss-Seidel"   # use Gauss-Seidel solver (i.e. update mesh after every constraint projection)
    # solver-type: "Jacobi"       # use Jacobi solver (i.e. update mesh only after going through every constraint projection)
    # solver-type: "Parallel-Jacobi"  # use parallelized Jacobi solver (note: unstable and requires GPU)

    constraint-type: "Stable-Neohookean-Combined"   # use Stable Neohookean constraints with 2x2 block constraint solve for each tet element
    # constraint-type: "Stable-Neohookean"          # use Stable Neohookean constraints with separate constraint solve for each tet element

    # residual-policy: "Every-Substep"    # compute the residuals after every time step
    residual-policy: "Never"              # don't compute the residuals

    ## 1st-Order XPBD options (has no effect on XPBDMeshObject)
    damping-multiplier: 100000   # 'b' from the 1st-Order XPBD paper
    adjust-damping-to-material: true

    # rendering settings
    colors: [
      [1.0, 0.3, 0.2],    # color of the bulk tissue
      [1.0, 0.15, 0.05]   # color of the hard tissue
    ]
    render-type: "PBR"
    metallic: 0.0
    roughness: 0.3
    draw-points: false
    draw-edges: true
    draw-faces: true
  

  -
    name: "Robot"
    type: "VirtuosoRobot"
    # position: [0, -0.035, -0.0015] #"close position"
    position: [0, 0.01, 0.03]
    rotation: [0, 180, 0]
    # rotation: [0,0,0]
    collisions: true
    # rendering settings
    color: [0.7, 0.7, 0.7]
    render-type: "PBR"
    metallic: 1.0
    roughness: 0.2

    arms:
    -
      name: "Arm1"
      type: "VirtuosoArm"
      tool-type: "palpation"
      tool-tube-length: 15e-3
      outer-tube-diameter: 1.56e-3
      outer-tube-radius-of-curvature: 1.5383e-2
      outer-tube-distal-straight-length: 5e-3
      outer-tube-translation: 6e-3
      outer-tube-rotation: 90
      inner-tube-rotation: 30
      inner-tube-diameter: 1.04e-3
      inner-tube-translation: 15e-3


