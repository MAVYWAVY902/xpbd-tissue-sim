FROM ubuntu:noble AS build

#########################
# Package install
#########################

RUN apt-get update && apt-get install -y \
    g++ \
    git \
    cmake \
    xorg-dev \
    libassimp-dev \
    wget \
    gdb \
    # needed by OpenHaptics API
    libncurses-dev \
    freeglut3-dev \
    build-essential \
    libusb-1.0-0-dev


# create directory for third party software
WORKDIR /thirdparty

# ROS2 Jazzy installation
# Set the locale
RUN apt-get update && apt-get install -y locales && \
    locale-gen en_US en_US.UTF-8 && \
    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
    export LANG=en_US.UTF-8

# Set the timezone
ENV ROS_VERSION=2
ENV ROS_DISTRO=jazzy
ENV ROS_PYTHON_VERSION=3
ENV TZ=America/New_York
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Setup the sources
RUN apt-get update && apt-get install -y software-properties-common curl && \
    add-apt-repository universe && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

    # Install ROS 2 packages
    RUN apt-get update && apt-get upgrade -y && \
        apt-get install -y ros-jazzy-desktop 

# install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y \
    build-essential \
    git \
    nano \
    iputils-ping \
    wget \
    python3-colcon-common-extensions \
    python3-colcon-mixin \
    python3-rosdep \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# bootstrap rosdep
RUN rosdep init && \
  rosdep update --rosdistro jazzy

# Environment setup
RUN echo 'source /opt/ros/jazzy/setup.bash' >> ~/.bashrc
RUN echo '#!/usr/bin/env bash' > /ros_entrypoint.sh
RUN echo 'source /opt/ros/jazzy/setup.bash' >> /ros_entrypoint.sh
RUN echo 'exec "$@"' >> /ros_entrypoint.sh
RUN chmod +x /ros_entrypoint.sh

ENTRYPOINT ["/ros_entrypoint.sh"]
# Run bash
CMD ["bash"]


########################
# YAML-cpp
########################
WORKDIR /thirdparty
RUN git clone https://github.com/jbeder/yaml-cpp.git
WORKDIR yaml-cpp/build
RUN cmake ..
RUN make -j 8
RUN make install


#########################
# Eigen install
#########################
WORKDIR /thirdparty
RUN git clone https://gitlab.com/libeigen/eigen.git
WORKDIR eigen/build
RUN cmake ..
RUN make -j 8
RUN make install



###########################
# Easy3D install
###########################
WORKDIR /thirdparty
RUN git clone https://github.com/LiangliangNan/Easy3D.git
WORKDIR Easy3D/build
RUN cmake ..
RUN make -j 8
RUN make install
RUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/easy3d-2.6.1/lib/



########################
# GMSH install
########################
WORKDIR /thirdparty
RUN git clone https://gitlab.onelab.info/gmsh/gmsh.git
WORKDIR gmsh/build
# install from source as a dynamic library for access to C++ API
RUN cmake -DENABLE_BUILD_DYNAMIC=1 ..
RUN make -j 8
RUN make install



#########################
# Mesh2SDF install
#########################
WORKDIR /thirdparty
RUN git clone https://github.com/smtobin/Mesh2SDF.git
WORKDIR Mesh2SDF/build
RUN cmake .. -DUSE_DOUBLE_PRECISION=1
RUN make -j 8
RUN make install


##########################
# Embree install
##########################

# packages needed for Embree
RUN apt-get update && apt-get -y install cmake-curses-gui \
    libtbb-dev \
    libglfw3-dev

WORKDIR /thirdparty
RUN git clone https://github.com/RenderKit/embree.git
WORKDIR embree/build
RUN cmake ..
RUN make -j 8
RUN make install




################################## 
# Geomagic Touch device setup
##################################

# install OpenHaptics drivers
WORKDIR /thirdparty
RUN wget https://s3.amazonaws.com/dl.3dsystems.com/binaries/support/downloads/KB+Files/Open+Haptics/openhaptics_3.4-0-developer-edition-amd64.tar.gz
RUN tar -xvf openhaptics_3.4-0-developer-edition-amd64.tar.gz
RUN wget https://s3.amazonaws.com/dl.3dsystems.com/binaries/Sensable/Linux/TouchDriver_2023_11_15.tgz
RUN tar -xvf TouchDriver_2023_11_15.tgz

# copied from OpenHaptics ./install script
WORKDIR /thirdparty/openhaptics_3.4-0-developer-edition-amd64
RUN cp -R opt/* /opt                                                                                                                                             
RUN cp -R usr/lib/* /usr/lib                                                                                                                                     
RUN cp -R usr/include/* /usr/include                                                                                                                                                                        
RUN ln -sfn /usr/lib/libHD.so.3.4.0 /usr/lib/libHD.so.3.4                                                                                                                  
RUN ln -sfn /usr/lib/libHD.so.3.4.0 /usr/lib/libHD.so                                                                                                                                                                                                                                                                                          
RUN ln -sfn /usr/lib/libHL.so.3.4.0 /usr/lib/libHL.so.3.4                                                                                                                  
RUN ln -sfn /usr/lib/libHL.so.3.4.0 /usr/lib/libHL.so                                                                                                                                                                                                                                                                                              
RUN ln -sfn /usr/lib/libQH.so.3.4.0 /usr/lib/libQH.so.3.4                                                                                                                  
RUN ln -sfn /usr/lib/libQH.so.3.4.0 /usr/lib/libQH.so                                                                                                                    
RUN ln -sfn /usr/lib/libQHGLUTWrapper.so.3.4.0 /usr/lib/libQHGLUTWrapper.so.3.4                                                                                            
RUN ln -sfn /usr/lib/libQHGLUTWrapper.so.3.4.0 /usr/lib/libQHGLUTWrapper.so                                                                                                                                                                                                                                               
RUN chmod -R 777 /opt/OpenHaptics
RUN export OH_SDK_BASE=/opt/OpenHaptics/Developer/3.4-0

# follow driver installation instructions
WORKDIR /thirdparty/TouchDriver_2023_11_15
RUN cp usr/lib/libPhantomIOLib42.so /usr/lib/

# make symbolic links so API examples build
RUN ln -s /usr/lib/x86_64-linux-gnu/libglut.so /usr/lib/libglut.so.3
RUN ln -s /usr/lib/x86_64-linux-gnu/libncurses.so.6 /usr/lib/libncurses.so.5
RUN ln -s /usr/lib/x86_64-linux-gnu/libtinfo.so.6 /usr/lib/libtinfo.so.5

RUN export GTDD_HOME=/root/.3dsystems



####################################
# Foxglove setup
####################################

# download and install Foxglove
WORKDIR /thirdparty
RUN wget https://get.foxglove.dev/desktop/latest/foxglove-studio-latest-linux-amd64.deb
RUN apt-get update
RUN apt-get install -y ./foxglove-studio-*.deb

# install rosbridge server package
RUN apt-get install ros-jazzy-rosbridge-server -y


WORKDIR /workspace

CMD "/bin/bash"